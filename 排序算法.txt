int bubble_sort(int[] array, int len)
{
	bool bflag = false;
	for(int i = 0; i < len; ++i)
	{
		for(int j = 0; j < len - 1 - i; ++j)
		{
			if(array[j] < array[j + 1])
			{
				swap();
				flag = true;
			}
		}
		if(!bflag) break;
	}
}

int select_sort(int[] array, int len)
{
	int minindex = 0;
	for(int i = 0; i < len; ++i)
	{
		for(int j = i + 1; j < len; ++j)
		{
			if(array[minindex] > array[j])
			{
				minindex = j;
			}
		}
		swap(minindex, i);
	}
}



int heap_sort(int[] array, int len)
{
	for(int i = (len / 2 - 1); i >= 0; --i)
	{
		int maxchildindex = i * 2 + 1;	//leftchild
		for(; (i * 2 + 1) < len; i = maxchildindex)
		{
			if(maxchildindex + 1 < len && array[maxchildindex] < array[maxchildindex + 1])
			{
				++maxchildindex;
			}
			if(array[maxchildindex] > array[i])
			{
				exchange(i, maxchildindex);
			}
			else
			{
				break;
			}
		}
	}
}
int myheapsort(int[] arr, int len)
{
	heap_sort(arr, len);
	
	for(int i = len - 1; i >= 1; --i)
	{
		exchange(0, i);
		heap_sort(arr, i);
	}
}













